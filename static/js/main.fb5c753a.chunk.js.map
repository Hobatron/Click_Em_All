{"version":3,"sources":["components/Header.js","components/ScoreBoard.js","components/Cards.js","components/Footer/index.js","App.js","index.js"],"names":["Header","react_default","a","createElement","className","alt","src","ScoreBoard","concat","this","props","guess","score","topscore","Component","Card","state","imgFile","dir","ext","names","tracker","char","isClicked","topScore","shake","randomizer","array","i","length","j","Math","floor","random","_ref","lost","clickedArray","_this$setState","console","log","_this","setState","Object","defineProperty","handleClick","event","preventDefault","indexOfClick","indexOf","target","getAttribute","_this$setState2","updatedArray","updatedTopScore","_this2","map","name","onClick","key","components_ScoreBoard","Footer","href","App","components_Header","Cards","components_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fb5c753a.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css'\n\nfunction Header() {\n\treturn (\n\t\t<div className='header-wrapper'>\n\t\t\t<img alt='Game of Thrones Banner' src='./imgs/GoTHeader.jpg' />\n\t\t</div>\n\t);\n};\n\nexport default Header","import React, {\n\tComponent\n} from 'react';\nimport './scoreboard.css';\n\nclass ScoreBoard extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='score-board'>\n\t\t\t\t<div className='split'>Click, or die.</div>\n\t\t\t\t<div className={`split ${this.props.guess}`}>{this.props.guess}!</div>\n\t\t\t\t<div className='split'>Score: {this.props.score} | Top Score: {this.props.topscore}</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n};\nexport default ScoreBoard;","/*\nImprovments I'd like to make:\nEdit scoreboard image to not repeat,\nlarger scoreboard and larger resolutions:\n\tvariable line hight?\nFix text feedback css to function properly\n\tchanging to green every correct guess\n*/\n\nimport React, {\n\tComponent\n} from 'react';\nimport './cards.css'\nimport ScoreBoard from './ScoreBoard';\n\n\nclass Card extends Component {\n\n\tstate = {\n\t\timgFile: {\n\t\t\tdir: 'imgs/',\n\t\t\text: '.jpg',\n\t\t\tnames: [\n\t\t\t\t'arya', 'bran', 'bronn',\n\t\t\t\t'cersei', 'daenerys', 'hound',\n\t\t\t\t'jaime', 'jon', 'samwell',\n\t\t\t\t'sansa', 'tyrion', 'varys'\n\t\t\t],\n\t\t},\n\t\ttracker: {\n\t\t\tchar: [\n\t\t\t\t'arya', 'bran', 'bronn',\n\t\t\t\t'cersei', 'daenerys', 'hound',\n\t\t\t\t'jaime', 'jon', 'samwell',\n\t\t\t\t'sansa', 'tyrion', 'varys'\n\t\t\t],\n\t\t\tisClicked: [false, false, false, false, false, false, false, false, false, false, false, false],\n\t\t},\n\t\tscore: 0,\n\t\ttopScore: 0,\n\t\tguess: 'Click an image to begin!',\n\t\tshake: false,\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.setState({\n\t\t\t[this.state.imgFile.names]: this.randomizer(this.state.imgFile.names)\n\t\t})\n\t}\n\n\trandomizer = (array) => {\n\t\tfor (let i = array.length - 1; i > 0; i--) {\n\t\t\tlet j = Math.floor(Math.random() * (i + 1));\n\t\t\t[array[i], array[j]] = [array[j], array[i]];\n\t\t};\n\t};\n\n\tlost = (clickedArray) => {\n\t\tconsole.log('get a life')\n\t\tfor (let i = 0; i < clickedArray.length; i++) {\n\t\t\tclickedArray[i] = false;\n\t\t};\n\t\tthis.setState({\n\t\t\t[this.state.imgFile.names]: this.randomizer(this.state.imgFile.names),\n\t\t\t[this.state.tracker.isClicked]: clickedArray,\n\t\t\tscore: 0,\n\t\t\tguess: 'incorrect',\n\t\t\tshake: 'shake'\n\t\t});\n\t};\n\n\thandleClick = (event) => {\n\t\tconst state = this.state;\n\t\tevent.preventDefault()\n\t\tconst clickedArray = state.tracker.isClicked;\n\t\tconst indexOfClick = state.tracker.char.indexOf(event.target.getAttribute('alt'))\n\t\tif (clickedArray[indexOfClick]) {\n\t\t\tthis.lost(clickedArray);\n\t\t} else {\n\t\t\tconst updatedArray = clickedArray[indexOfClick] = true;\n\t\t\tlet updatedTopScore = (state.score === state.topScore) ? state.topScore + 1 : state.topScore;\n\t\t\tconsole.log(updatedTopScore)\n\t\t\tthis.setState({\n\t\t\t\t[state.tracker.isClicked]: updatedArray,\n\t\t\t\t[state.imgFile.names]: this.randomizer(state.imgFile.names),\n\t\t\t\ttopScore: updatedTopScore,\n\t\t\t\tscore: state.score + 1,\n\t\t\t\tguess: 'correct',\n\t\t\t\tshake: false,\n\t\t\t})\n\t\t}\n\n\t}\n\n\trender() {\n\n\t\treturn (\n\t\t\t<div className='wrapper'>\n\t\t\t\t<div className={`cardContainer ${this.state.shake}`}>\n\t\t\t\t\t{this.state.imgFile.names.map(name => (\n\t\t\t\t\t\t<img className='card' onClick={this.handleClick} alt={name} key={name} src={this.state.imgFile.dir + name + this.state.imgFile.ext} />\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<ScoreBoard score={this.state.score} topscore={this.state.topScore} guess={this.state.guess} />\n\n\t\t\t</div>\n\n\t\t);\n\t}\n};\nexport default Card","import React from 'react';\r\nimport './footer.css'\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <div className='footer'></div>\r\n      <div className='footer'>Click, or die! Find repo <a href='https://github.com/Hobatron/Click_Em_All'><span>here.</span></a></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer","import React, {\n\tComponent\n} from 'react';\nimport Header from './components/Header';\nimport Cards from './components/Cards';\nimport './components/reset.css';\nimport Footer from './components/Footer'\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Header />\n\t\t\t\t<Cards />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}